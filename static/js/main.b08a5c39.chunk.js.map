{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGallery/Button/Button.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/fetchImages.js","components/App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchText","setSearchText","className","e","preventDefault","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","value","onChange","target","autoComplete","autoFocus","placeholder","Modal","closeModal","children","modalRoot","document","querySelector","useEffect","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","Button","loadMore","ImageGalleryItem","item","openModal","id","src","webformatURL","alt","tags","ImageGallery","query","images","setImages","isLoading","setIsLoading","currentPage","setCurrentPage","isModal","setIsModal","modalItem","setModalItem","getImages","window","scrollTo","top","documentElement","scrollHeight","behavior","page","fetch","then","res","json","fetchImage","hits","length","success","prevState","warn","catch","err","console","log","imgId","find","image","map","color","height","width","timeout","largeImageURL","App","setQuery","ReactDOM","render","StrictMode","newestOnTop","rtl","pauseOnFocusLoss","getElementById"],"mappings":"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","file":"static/js/main.b08a5c39.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchText === '') {\r\n      toast.error('Please enter search query!', {\r\n        position: 'top-right',\r\n        autoClose: 4000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    onSubmit(searchText);\r\n    setSearchText('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          value={searchText}\r\n          onChange={handleChange}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: propTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Modal({ closeModal, children }) {\r\n  const modalRoot = document.querySelector('#modal-root');\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleCloseClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleCloseClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: propTypes.func.isRequired,\r\n  children: propTypes.node.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Button({ loadMore }) {\r\n  return (\r\n    <button type=\"button\" onClick={loadMore} className=\"Button\">\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  loadMore: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ item, openModal }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        id={item.id}\r\n        onClick={() => openModal(item.id)}\r\n        className=\"ImageGalleryItem-image\"\r\n        src={item.webformatURL}\r\n        alt={item.tags}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  item: propTypes.object.isRequired,\r\n  openModal: propTypes.func.isRequired\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Modal from '../Modal/Modal';\r\nimport Button from './Button/Button';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport fetchImage from '../../service/fetchImages';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './ImageGallery.scss';\r\n\r\nfunction ImageGallery({ query }) {\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isModal, setIsModal] = useState(false);\r\n  const [modalItem, setModalItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (currentPage === 1) {\r\n      return;\r\n    }\r\n    getImages(currentPage);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    setImages([]);\r\n    setCurrentPage(1);\r\n    getImages(1);\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }, [images]);\r\n\r\n  const getImages = currentPage => {\r\n    setIsLoading(true);\r\n    fetchImage(query, currentPage)\r\n      .then(res => {\r\n        if (res.hits.length > 0) {\r\n          toast.success('Success!', {\r\n            position: 'top-right',\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          setImages(prevState => {\r\n            if (prevState !== '') {\r\n              return [...prevState, ...res.hits];\r\n            }\r\n          });\r\n          setIsLoading(false);\r\n        } else {\r\n          toast.warn('Nothing found, try another query', {\r\n            position: 'top-right',\r\n            autoClose: 4000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        toast.error('Error, Something went wrong, try again', {\r\n          position: 'top-right',\r\n          autoClose: 4000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const loadMore = () => {\r\n    setCurrentPage(prevState => prevState + 1);\r\n  };\r\n\r\n  const openModal = imgId => {\r\n    setIsModal(true);\r\n    setModalItem(images.find(image => image.id === imgId));\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModal(false);\r\n    setModalItem(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {images.length > 0 && (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {images.map(item => (\r\n              <ImageGalleryItem\r\n                key={item.id}\r\n                item={item}\r\n                openModal={openModal}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className=\"loadMoreContainer\">\r\n            {isLoading ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={40}\r\n                width={40}\r\n                timeout={4000}\r\n              />\r\n            ) : (\r\n              <Button loadMore={loadMore} />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      {isModal && (\r\n        <Modal closeModal={closeModal}>\r\n          <img src={modalItem.largeImageURL} alt={modalItem.tags} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","export default function fetchImages(query, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${12}&key=17903714-8f5ebcdc0900c0123ad2db8f4`,\r\n  ).then(res => res.json());\r\n}\r\n","import React, { useState } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={setQuery} />\r\n      {query && <ImageGallery query={query} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"App\" />\n    <ToastContainer\n      position=\"bottom-center\"\n      autoClose={4000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}